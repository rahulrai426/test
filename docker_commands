docker pull <imageName>
docker ps --for checking the how many containers are running currently
docker ps -a -- for checking how many containeres are available with all the status
docker images --for checking how many images are available
cd /var/lib/docker  --- this is the directory
cd /var/lib/docker/containers --- all the container files are available in  this.
Install the nginx container from docker hub and then allow the port and services
docker run --name myweb -p 7090:80 -d nginx   -- this command means running the docker with self port and routing the traffic on port 80 and name of the container and container name
if you want to login in container then execute the below command
  docker exec myweb ls/  -- for checking the directories inside docker
  docker exec -it myweb /bin/bash   -- for getting into in the docker path --- once you get in to the docker directory you can run linux coomands
if docker exec -it myweb /bin/bash this will not work then try docker exec -it myweb /bin/sh
docker rmi docker name with tag for deleting the docker images
for removing the container follow below step
stop the docker conatainer :- docker stop <container_name>
remove container :- docker rm <container_id>
then remove the docker image :- docker rmi nginx

https://docs.docker.com/engine/install/ubuntu/ -- Download for ubuntu

command line reference
https://docs.docker.com/reference/cli/docker/

to check the meta of container : docker inspect <conatiner_name>

for adding the argument docker run -d -P -e MYSQL_ROOT_PASSWORD=mypass mysql:5.7

official images: https://hub.docker.com/search?badges=official

image create with volume
create directory where you want

docker run --name vprofiledb -d -e MYSQL_ROOT_PASSWORD=mydb -p 3030:3306 -v /root/vprodbdata:/var/lib/mysql mysql:5.7
